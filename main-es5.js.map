{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/components/log-form/log-form.component.html","/./src/app/components/logs/logs.component.html","/./src/app/components/navbar/navbar.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/components/log-form/log-form.component.css","/./src/app/components/log-form/log-form.component.ts","/./src/app/components/logs/logs.component.css","/./src/app/components/logs/logs.component.ts","/./src/app/components/navbar/navbar.component.css","/./src/app/components/navbar/navbar.component.ts","/./src/app/services/log.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <app-log-form></app-log-form>\\n  <app-logs></app-logs>\\n</div>\"","module.exports = \"<div class=\\\"card card-body mb-3\\\">\\n    <form (ngSubmit) = \\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name  = \\\"text\\\" class=\\\"form-control\\\" placeholder = \\\"Add a log..\\\" [(ngModel)] = \\\"text\\\">\\n        </div>\\n        <input type=\\\"submit\\\" value=\\\"Add Log\\\" class=\\\"btn btn-light\\\" [disabled]=\\\"!this.text\\\">\\n        <button type = \\\"button\\\" (click) = \\\"clearState()\\\" class=\\\"btn btn-warning\\\" [hidden] = !this.text >Clear</button>\\n    </form>\\n</div>\"","module.exports = \"<ul class=\\\"list-group\\\" *ngIf = \\\"loaded && logs.length > 0\\\">\\n    <li *ngFor = \\\"let log of logs\\\" class=\\\"list-group-item d-flex justify-content-between align-items-center\\\"\\n        [class.list-group-item-secondary] = \\\"selectedLog === log\\\">\\n        <a href=\\\"#\\\" (click) = \\\"onSelect(log)\\\">{{log.text}}</a>\\n        <span class=\\\"log-date\\\">{{log.date | date:'short'}}</span>\\n        <i (click) = \\\"onDelete(log)\\\" class=\\\"fa fa-remove\\\"></i>\\n    </li>\\n</ul>\\n<div *ngIf = \\\"loaded && logs.length == 0\\\">\\n    <h5> No logs in the system</h5>\\n</div>\\n\\n<div *ngIf = \\\"!loaded\\\">\\n    <h5> Loading </h5>\\n</div>\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-3\\\">\\n    <div class=\\\"container\\\">\\n        <a href=\\\"/\\\" class=\\\"navbar-brand\\\">DevLogger</a>\\n    </div>\\n</nav>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'devlogger';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LogsComponent } from './components/logs/logs.component';\nimport { LogFormComponent } from './components/log-form/log-form.component';\nimport { LogService } from './services/log.service';\nimport { FormsModule } from  '@angular/forms'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LogsComponent,\n    LogFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [LogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9nLWZvcm0vbG9nLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { LogService} from '../../services/log.service';\n//import { UUID } from 'angular2-uuid';\n//import { Log } from '../../models/Log';\n@Component({\n  selector: 'app-log-form',\n  templateUrl: './log-form.component.html',\n  styleUrls: ['./log-form.component.css']\n})\nexport class LogFormComponent implements OnInit {\n  id : string;\n  text : string;\n  date :  any;\n  isNew : boolean = true;\n  constructor(private logService: LogService) { }\n\n  ngOnInit() {\n    this.logService.selectedLog.subscribe(log => {\n      if(log.id !== null){  \n      this.id = log.id;\n      this.text = log.text;\n      this.date = log.date;\n      this.isNew = false;\n      }\n    });\n  }\n\n  onSubmit(){\n    if(this.isNew) {\n\n      const newLog = {\n        id : this.uuidv4(),\n        text : this.text,\n        date : new Date()\n      }\n\n      console.log(newLog.id+ \" generated UUID\");\n      this.logService.addLog(newLog);\n    } else {\n\n      const updatedLog = {\n        id : this.id,\n        text: this.text,\n        date :  this.date\n      }\n\n      this.logService.updateLog(updatedLog);\n    }\n\n    this.clearState();\n  }\n  clearState() {\n    this.isNew = true;\n    this.id = '';\n    this.text = '';\n    this.date = '';\n    this.logService.stateClear();\n  }\n  uuidv4() {\n\n    //return UUID.UUID();\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n","module.exports = \".log-date{\\r\\n    color : #777;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dzL2xvZ3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xvZ3MvbG9ncy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZy1kYXRle1xyXG4gICAgY29sb3IgOiAjNzc3O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Log } from '../../models/Log';\nimport { LogService } from '../../services/log.service';\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css']\n})\nexport class LogsComponent implements OnInit {\n\n  logs: Log[];\n  selectedLog : Log;\n  loaded : boolean = false;\n  constructor(private logService: LogService) { }\n\n  ngOnInit() {\n\n    this.logService.clearState.subscribe(clear => {\n      if(clear){\n        this.selectedLog = {\n          id : '',\n          text: '',\n          date: ''\n        }\n      }\n    });\n\n    this.logService.getLogs().subscribe(logs => {\n      this.logs = logs;\n      this.loaded = true;\n    });\n  }\n\n  onSelect(log: Log) {\n    this.logService.setLogForm(log);\n    this.selectedLog = log;\n  }\n\n  onDelete(log: Log) {\n    if (confirm(\"Are you sure ?\")) {\n      this.logService.deleteLog(log);\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ } from '@angular/core';\nimport { Log } from '../models/Log';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n  \n  logs: Log[];\n  private logSource = new BehaviorSubject<Log>({id: null, text:null, date: null});\n  selectedLog = this.logSource.asObservable();\n\n  private stateSource = new BehaviorSubject<boolean>(true);\n  clearState = this.stateSource.asObservable();\n\n  constructor() {\n   /*  this.logs = [\n      { id: '1', text: 'Generated components', date: new Date('12/26/2018 12:54:12') },\n      { id: '2', text: 'Added Bootstrap', date: new Date('12/27/2018 10:50:12') },\n      { id: '3', text: 'Added log components', date: new Date('12/27/2018 11:54:13') }]; */\n      this.logs = [];\n  }\n\n  getLogs(): Observable<Log[]> {\n    if(localStorage.getItem('logs') === null){\n      this.logs = [];\n    } else {\n      this.logs = JSON.parse(localStorage.getItem('logs'));\n    }\n\n    this.logs.sort((a,b) => {\n      return new Date(b.date).getTime() - new Date(a.date).getTime();\n    });\n\n    return of(this.logs);\n  }\n\n  setLogForm(log: Log){\n    this.logSource.next(log);\n  }\n\n  addLog(log : Log){\n    this.logs.unshift(log);\n\n    localStorage.setItem('logs',JSON.stringify(this.logs));\n  }\n\n  updateLog(log : Log){\n    this.logs.forEach((cur,index)=>{\n      if(cur.id === log.id){\n        this.logs.splice(index,1);\n      }\n    });\n\n  this.logs.unshift(log);\n\n  localStorage.setItem('logs',JSON.stringify(this.logs));\n  }\n\n  deleteLog(log : Log){\n    this.logs.forEach((cur,index)=>{\n      if(cur.id === log.id){\n        this.logs.splice(index,1);\n      }\n    });\n\n    localStorage.setItem('logs',JSON.stringify(this.logs));\n  }\n\n  stateClear() {\n    this.stateSource.next(true);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}